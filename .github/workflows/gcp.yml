 # starts here

---
name: Build and Push Docker Image to Google Cloud Platform
on: 
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: carro-app-backend
      PROJECT_ID: pro-bliss-413511
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with: 
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker buildx build --platform linux/amd64 
           --build-arg PORT='${{ secrets.PORT }}' 
           --build-arg HOST='${{ secrets.HOST }}' 
           --build-arg NODE_ENV='${{ secrets.NODE_ENV }}' 
           --build-arg APP_KEY='${{ secrets.APP_KEY }}' 
           --build-arg DRIVE_DISK='${{ secrets.DRIVE_DISK }}' 
           --build-arg DB_CONNECTION='${{ secrets.DB_CONNECTION }}' 
           --build-arg PG_HOST='${{ secrets.PG_HOST }}' 
           --build-arg PG_PORT='${{ secrets.PG_PORT }}' 
           --build-arg PG_USER='${{ secrets.PG_USER }}' 
           --build-arg PG_PASSWORD='${{ secrets.PG_PASSWORD }}' 
           --build-arg PG_DB_NAME='${{ secrets.PG_DB_NAME }}' 
           --build-arg SECRET_TOKEN='${{ secrets.SECRET_TOKEN }}' 
           --build-arg EMAIL_USER='${{ secrets.EMAIL_USER }}' 
           --build-arg EMAIL_PASSWORD='${{ secrets.EMAIL_PASSWORD }}' 
           --build-arg CACHE_VIEWS='${{ secrets.CACHE_VIEWS }}'         
           -t carro-backend-api .

    - name: Print ID
      run: echo "ID is ${{ env.EMAIL_USER }}"

    - name: Print Secret
      run: echo "Host is ${{ secrets.HOST }}"  
  
    # - name: Checkout
    #   uses: actions/checkout@v4
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3    
    # - name: Build
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     file: Dockerfile
    #     platforms: linux/amd64
    #     tags: carro-backend-api
    #     secrets: |
    #       "PORT=${{ secrets.PORT }}"
    #       "HOST=${{ secrets.HOST }}"
    #       "NODE_ENV=${{ secrets.NODE_ENV }}"
    #       "APP_KEY=${{ secrets.APP_KEY }}"
    #       "DRIVE_DISK=${{ secrets.DRIVE_DISK }}"
    #       "DB_CONNECTION=${{ secrets.DB_CONNECTION }}"
    #       "PG_HOST=${{ secrets.PG_HOST }}"
    #       "PG_PORT=${{ secrets.PG_PORT }}"
    #       "PG_USER=${{ secrets.PG_USER }}"
    #       "PG_PASSWORD=${{ secrets.PG_PASSWORD }}"
    #       "PG_DB_NAME=${{ secrets.PG_DB_NAME }}"
    #       "SECRET_TOKEN=${{ secrets.SECRET_TOKEN }}"
    #       "EMAIL_USER=${{ secrets.EMAIL_USER }}"
    #       "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}"
    #       "CACHE_VIEWS=${{ secrets.CACHE_VIEWS }}"         

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major  

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag carro-backend-api us-central1-docker.pkg.dev/pro-bliss-413511/carro-app-backend/carro-backend-api:latest
        docker push us-central1-docker.pkg.dev/pro-bliss-413511/carro-app-backend/carro-backend-api:latest

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@main
      with:
        image: us-central1-docker.pkg.dev/pro-bliss-413511/carro-app-backend/carro-backend-api:latest
        service: carro-backend-api
        region: us-central1
          # platform: managed
          # allow-unauthenticated: true
          # env_vars: |
          #     FOO=bar
          #     ZIP=zap

    # end here














    
    # - name: Push Docker Image to Container Registry (GCR)
    #   run: |-
    #     docker tag carro-backend-api:latest gcr.io/$PROJECT_ID/carro-backend-api:latest
    #     docker push gcr.io/$PROJECT_ID/carro-backend-api:latest

    # - name: Push Docker Image to Container Registry (GCR)
    #   env:
    #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
    #   run: |-
    #     docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
    #     docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
    #     docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
    #     docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    # - name: Push Docker Image to Artifact Registry
    #   env:
    #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
    #   run: |-
    #     docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME/$IMAGE_NAME:latest
    #     docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME/$IMAGE_NAME:$GIT_TAG
    #     docker push us-central1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME/$IMAGE_NAME:latest
    #     docker push us-central1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME/$IMAGE_NAME:$GIT_TAG